apply plugin: 'com.android.application'
def globalConfig = rootProject.extensions.getByName("ext")
def date = new Date().format("MMdd", TimeZone.getTimeZone("GMT+08"))
def year = new Date().format("yyyy", TimeZone.getTimeZone("GMT+08")).substring(2, 4)
android {
    compileSdkVersion globalConfig.android.compileSdkVersion
    defaultConfig {
        applicationId "cn.jarlen.android.aidl.server"
        minSdkVersion globalConfig.android.minSdkVersion
        targetSdkVersion globalConfig.android.targetSdkVersion
        versionCode Integer.valueOf("${year}${date}")
        versionName "1.${year}${date}"
        multiDexEnabled true
        flavorDimensions "zjsb"
    }

    //签名
    signingConfigs {
        config {
            keyAlias 'jarlen52'
            keyPassword 'jarlen52'
            storeFile file('../storekey_jarlen52')
            storePassword 'jarlen52'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.config
        }

        release {
            debuggable false
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.config
        }
    }

    //使生成的apk名字加上版本号
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "AIDL-Server-${variant.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libDependencies.appcompat
    implementation libDependencies.constraintLayout
    implementation project(path: ':AIDL')
}